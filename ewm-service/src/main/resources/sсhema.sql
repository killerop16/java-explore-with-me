DROP TABLE IF EXISTS users,
    categories,
    events,
    locations,
    participation_requests,
    compilations,
    compilations_events CASCADE;

CREATE TABLE IF NOT EXISTS users(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name VARCHAR NOT NULL,
    email VARCHAR UNIQUE
    );

CREATE TABLE IF NOT EXISTS  categories(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name VARCHAR UNIQUE
    );

CREATE TABLE IF NOT EXISTS  locations(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL
    );

CREATE TABLE IF NOT EXISTS  events(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    annotation VARCHAR NOT NULL,
    category_id INTEGER NOT NULL,
    description VARCHAR NOT NULL,
    event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    location_id INTEGER,
    paid Boolean NOT NULL DEFAULT FALSE,
    participant_limit INTEGER DEFAULT 0,
    request_moderation BOOLEAN DEFAULT TRUE,
    title VARCHAR UNIQUE NOT NULL,
    initiator_id INTEGER NOT NULL,
    created_on TIMESTAMP WITHOUT TIME ZONE,
    published_date TIMESTAMP WITHOUT TIME ZONE,
    confirmed_requests INTEGER,
    event_state VARCHAR,
    views INTEGER DEFAULT 0,
    CONSTRAINT events_to_categories FOREIGN KEY(category_id) REFERENCES categories(id) ON DELETE CASCADE,
    CONSTRAINT events_to_locations FOREIGN KEY(location_id) REFERENCES locations(id) ON DELETE CASCADE,
    CONSTRAINT events_to_users FOREIGN KEY(initiator_id) REFERENCES users(id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS participation_requests(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    created TIMESTAMP WITHOUT TIME ZONE,
    event_id INTEGER NOT NULL,
    requester_id INTEGER NOT NULL,
    status VARCHAR NOT NULL,
    CONSTRAINT participation_to_events FOREIGN KEY (event_id) REFERENCES events(id) ON DELETE CASCADE,
    CONSTRAINT participation_to_users FOREIGN KEY (requester_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT unique_event_requester UNIQUE(event_id, requester_id)
    );

CREATE TABLE IF NOT EXISTS compilations(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    pinned BOOLEAN NOT NULL,
    title VARCHAR(50) UNIQUE NOT NULL
    );

CREATE TABLE IF NOT EXISTS compilations_events(
    compilation_id INTEGER NOT NULL,
    event_id INTEGER NOT NULL,
    CONSTRAINT ce_to_compilations FOREIGN KEY(compilation_id) REFERENCES compilations(id) ON DELETE CASCADE,
    CONSTRAINT ce_to_events FOREIGN KEY(event_id) REFERENCES events(id) ON DELETE CASCADE
    );